package domtest;

import java.io.File;
import java.io.IOException;

import javax.xml.parsers.DocumentBuilder;
import javax.xml.parsers.DocumentBuilderFactory;
import javax.xml.parsers.ParserConfigurationException;

import org.w3c.dom.Document;
import org.w3c.dom.Node;
import org.xml.sax.SAXException;

//使用DOM解析器修改XML文档例子
public class dommain4 {
	public static void main(String argv[]) throws ParserConfigurationException, SAXException, IOException {

		
		      File inputFile = new File("testxml3.txt"); 	 
		      //1.创建DocumentBuilder
		      DocumentBuilderFactory docFactory =
		      DocumentBuilderFactory.newInstance();
		      DocumentBuilder docBuilder = 
		      docFactory.newDocumentBuilder();
		      //2.从文件中获取文档
		      Document doc = docBuilder.parse(inputFile);
		      
		      Node cars = doc.getFirstChild();
		      System.out.println(cars.getNodeName()+" "+cars.getNodeValue());
		     /* Node supercar = doc.getElementsByTagName("supercars").item(0);
		      // update supercar attribute
		      NamedNodeMap attr = supercar.getAttributes();
		      Node nodeAttr = attr.getNamedItem("company");
		      nodeAttr.setTextContent("Lamborigini");

		      // loop the supercar child node
		      NodeList list = supercar.getChildNodes();
		      for (int temp = 0; temp < list.getLength(); temp++) {
		         Node node = list.item(temp);
		         if (node.getNodeType() == Node.ELEMENT_NODE) {
		            Element eElement = (Element) node;
		            if ("carname".equals(eElement.getNodeName())){
		               if("Ferrari 101".equals(eElement.getTextContent())){
		                  eElement.setTextContent("Lamborigini 001");
		               }
		            if("Ferrari 202".equals(eElement.getTextContent()))
		               eElement.setTextContent("Lamborigini 002");
		            }
		         }
		      }
		      NodeList childNodes = cars.getChildNodes();
		      for(int count = 0; count < childNodes.getLength(); count++){
		         Node node = childNodes.item(count);
		         if("luxurycars".equals(node.getNodeName()))
		            cars.removeChild(node);
		         }
		         // write the content on console
		         TransformerFactory transformerFactory = 
		         TransformerFactory.newInstance();
		         Transformer transformer = transformerFactory.newTransformer();
		         DOMSource source = new DOMSource(doc);
		         System.out.println("-----------Modified File-----------");
		         StreamResult consoleResult = new StreamResult(System.out);
		         transformer.transform(source, consoleResult);
		      } catch (Exception e) {
		         e.printStackTrace();
		      }*/
		   }
}
